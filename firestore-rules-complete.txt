rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to get user role (with error handling)
    function getUserRole() {
      let userDoc = get(/databases/$(database)/documents/users/$(request.auth.uid));
      return userDoc != null ? userDoc.data.role : null;
    }

    // Helper function to check if user is admin
    function isAdmin() {
      return getUserRole() == 'admin';
    }

    // Helper function to check if user is staff
    function isStaff() {
      return getUserRole() == 'staff';
    }

    // Helper function to check if user is active (with fallback)
    function isActiveUser() {
      let userDoc = get(/databases/$(database)/documents/users/$(request.auth.uid));
      return userDoc != null ? (userDoc.data.isActive == true) : true;
    }

    // Users collection - user profile management
    match /users/{userId} {
      // Allow authenticated users to create their own profile (for signup)
      allow create: if request.auth != null && request.auth.uid == userId;
      
      // Allow users to read and update their own profile
      allow read, update: if request.auth != null && request.auth.uid == userId;
      
      // Allow authenticated users to read all user profiles (for admin functionality)
      allow read: if request.auth != null;
      
      // Allow any authenticated user to create/update user profiles (for admin user management)
      allow create, update: if request.auth != null;
      
      // Admins can delete user profiles (for user management)
      allow delete: if request.auth != null && isAdmin() && isActiveUser();
    }
    
    // Assessments collection - assessment data
    match /assessments/{assessmentId} {
      // Allow authenticated users to create assessments
      allow create: if request.auth != null;
      
      // Allow users to read their own assessments + admin access
      allow read: if request.auth != null;
      
      // Allow users to update/delete their own assessments
      allow update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
      
      // Admins can delete any assessment (for user management)
      allow delete: if request.auth != null && isAdmin() && isActiveUser();
    }
  }
}

